File path is /scratch/work/hakkina7/melanoma/
Device is cuda
Training InceptionV3 model.
Since there is class imbalance present in some of the data sets, use the following weights in the loss function:
tensor([ 29.1988,   7.6238,   9.6541, 106.0942,   5.6009,   1.9674,  40.3665,
        100.3168], device='cuda:0')


Epoch 1:
Mean loss 2.1749486958942956 - Correctly labeled training images 22.49%
Classified 37.59 % of test images correctly.
Precision on test set: [0.   0.3  0.12 0.   0.35 0.75 0.04 0.  ]
Recall on test set: [0.   0.17 0.01 0.   0.46 0.5  0.55 0.  ]
F1-score on test set: [0.   0.22 0.01 0.   0.4  0.6  0.07 0.  ]
ROC AUC on test set: {'AK': 0.43, 'BCC': 0.42, 'BKL': 0.46, 'DF': 0.45, 'MEL': 0.6, 'NV': 0.51, 'SCC': 0.5, 'VASC': 0.42}
Confusion matrix on test set:
                 pred as AK  pred as BCC  ...  pred as SCC  pred as VASC
true class AK             0           25  ...           68             0
true class BCC            0           87  ...          252             0
true class BKL            0           29  ...          208             0
true class DF             0            1  ...           25             0
true class MEL            0           34  ...          160             0
true class NV             0           96  ...          518             0
true class SCC            0           15  ...           52             0
true class VASC           0            1  ...           13             0

[8 rows x 8 columns]


Epoch 2:
Mean loss 2.0259697865988553 - Correctly labeled training images 30.16%
Classified 41.59 % of test images correctly.
Precision on test set: [0.1  0.2  0.22 0.08 0.38 0.81 0.13 0.  ]
Recall on test set: [0.58 0.31 0.08 0.11 0.42 0.53 0.05 0.  ]
F1-score on test set: [0.17 0.24 0.11 0.1  0.4  0.64 0.08 0.  ]
ROC AUC on test set: {'AK': 0.41, 'BCC': 0.38, 'BKL': 0.37, 'DF': 0.26, 'MEL': 0.54, 'NV': 0.61, 'SCC': 0.43, 'VASC': 0.42}
Confusion matrix on test set:
                 pred as AK  pred as BCC  ...  pred as SCC  pred as VASC
true class AK            76           36  ...            2             0
true class BCC          231          156  ...            7             0
true class BKL          100          134  ...            6             0
true class DF             8           14  ...            0             0
true class MEL          117          116  ...            8             0
true class NV           175          303  ...           10             0
true class SCC           44           19  ...            5             0
true class VASC           8           10  ...            0             0

[8 rows x 8 columns]


Epoch 3:
Mean loss 1.9428353431849072 - Correctly labeled training images 35.67%
Classified 37.96 % of test images correctly.
Precision on test set: [0.09 0.25 0.15 0.04 0.4  0.87 0.07 0.01]
Recall on test set: [0.32 0.35 0.23 0.03 0.38 0.45 0.12 0.08]
F1-score on test set: [0.14 0.29 0.18 0.03 0.39 0.59 0.09 0.02]
ROC AUC on test set: {'AK': 0.41, 'BCC': 0.38, 'BKL': 0.4, 'DF': 0.29, 'MEL': 0.54, 'NV': 0.61, 'SCC': 0.38, 'VASC': 0.38}
Confusion matrix on test set:
                 pred as AK  pred as BCC  ...  pred as SCC  pred as VASC
true class AK            41           48  ...           20             1
true class BCC          155          175  ...           41            17
true class BKL           57          114  ...           24            18
true class DF             3           15  ...            7             5
true class MEL           77           90  ...           27            18
true class NV            90          223  ...           18           155
true class SCC           32           26  ...           11             4
true class VASC           3            7  ...            0             3

[8 rows x 8 columns]


Epoch 4:
Mean loss 1.8900675865753969 - Correctly labeled training images 36.94%
Classified 19.90 % of test images correctly.
Precision on test set: [0.11 0.29 0.2  0.5  0.48 0.86 0.   0.02]
Recall on test set: [0.61 0.07 0.03 0.03 0.2  0.24 0.   0.87]
F1-score on test set: [0.18 0.12 0.06 0.05 0.28 0.37 0.   0.03]
ROC AUC on test set: {'AK': 0.29, 'BCC': 0.29, 'BKL': 0.35, 'DF': 0.34, 'MEL': 0.45, 'NV': 0.73, 'SCC': 0.3, 'VASC': 0.62}
Confusion matrix on test set:
                 pred as AK  pred as BCC  ...  pred as SCC  pred as VASC
true class AK            79            7  ...            4            38
true class BCC          249           37  ...            4           188
true class BKL          107           24  ...            4           210
true class DF             4            3  ...            2            22
true class MEL           95           20  ...            9           340
true class NV           144           31  ...           14          1158
true class SCC           53            4  ...            0            33
true class VASC           4            0  ...            0            33

[8 rows x 8 columns]


Epoch 5:
Mean loss 1.8378137719555985 - Correctly labeled training images 37.49%
Classified 33.38 % of test images correctly.
Precision on test set: [0.12 0.28 0.22 0.06 0.4  0.82 0.   0.03]
Recall on test set: [0.5  0.31 0.02 0.17 0.41 0.38 0.   0.66]
F1-score on test set: [0.19 0.29 0.04 0.08 0.4  0.52 0.   0.05]
ROC AUC on test set: {'AK': 0.35, 'BCC': 0.32, 'BKL': 0.32, 'DF': 0.28, 'MEL': 0.48, 'NV': 0.7, 'SCC': 0.34, 'VASC': 0.52}
Confusion matrix on test set:
                 pred as AK  pred as BCC  ...  pred as SCC  pred as VASC
true class AK            65           36  ...            1            17
true class BCC          175          152  ...            0           106
true class BKL           62          110  ...            1           104
true class DF             6           10  ...            0            10
true class MEL          103           64  ...            0           115
true class NV           109          134  ...            1           575
true class SCC           38           27  ...            0            10
true class VASC           4            2  ...            0            25

[8 rows x 8 columns]


Epoch 6:
Mean loss 1.8109605190129687 - Correctly labeled training images 38.01%
Classified 41.30 % of test images correctly.
Precision on test set: [0.16 0.28 0.17 0.04 0.46 0.84 0.07 0.07]
Recall on test set: [0.27 0.35 0.11 0.44 0.37 0.52 0.2  0.5 ]
F1-score on test set: [0.2  0.31 0.14 0.07 0.41 0.64 0.11 0.13]
ROC AUC on test set: {'AK': 0.38, 'BCC': 0.33, 'BKL': 0.36, 'DF': 0.41, 'MEL': 0.48, 'NV': 0.68, 'SCC': 0.37, 'VASC': 0.49}
Confusion matrix on test set:
                 pred as AK  pred as BCC  ...  pred as SCC  pred as VASC
true class AK            35           37  ...           24             0
true class BCC           80          174  ...           54            22
true class BKL           26          103  ...           43            18
true class DF             0            8  ...            4             2
true class MEL           25           92  ...           53            24
true class NV            44          171  ...           64           177
true class SCC           13           27  ...           19             0
true class VASC           1            4  ...            0            19

[8 rows x 8 columns]


Epoch 7:
Mean loss 1.7666717421745277 - Correctly labeled training images 39.82%
Classified 44.59 % of test images correctly.
Precision on test set: [0.2  0.36 0.17 0.07 0.5  0.84 0.02 0.07]
Recall on test set: [0.13 0.52 0.39 0.08 0.37 0.51 0.01 0.58]
F1-score on test set: [0.16 0.42 0.23 0.08 0.42 0.64 0.01 0.13]
ROC AUC on test set: {'AK': 0.33, 'BCC': 0.29, 'BKL': 0.38, 'DF': 0.29, 'MEL': 0.51, 'NV': 0.68, 'SCC': 0.3, 'VASC': 0.56}
Confusion matrix on test set:
                 pred as AK  pred as BCC  ...  pred as SCC  pred as VASC
true class AK            17           56  ...            3             1
true class BCC           25          261  ...            4            25
true class BKL           12          110  ...            4            27
true class DF             0           11  ...            1             6
true class MEL           17           73  ...           10            29
true class NV            10          175  ...           17           198
true class SCC            6           38  ...            1             2
true class VASC           0            7  ...            0            22

/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:206: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mean = torch.tensor(mean, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:207: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  std = torch.tensor(std, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1248: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:206: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mean = torch.tensor(mean, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:207: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  std = torch.tensor(std, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1248: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:206: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mean = torch.tensor(mean, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:207: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  std = torch.tensor(std, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:206: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mean = torch.tensor(mean, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:207: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  std = torch.tensor(std, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:206: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mean = torch.tensor(mean, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:207: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  std = torch.tensor(std, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:206: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mean = torch.tensor(mean, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:207: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  std = torch.tensor(std, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:206: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mean = torch.tensor(mean, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:207: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  std = torch.tensor(std, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:206: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mean = torch.tensor(mean, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:207: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  std = torch.tensor(std, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:206: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mean = torch.tensor(mean, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:207: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  std = torch.tensor(std, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:206: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mean = torch.tensor(mean, dtype=torch.float32)
[8 rows x 8 columns]


Epoch 8:
Mean loss 1.7291141871586206 - Correctly labeled training images 40.95%
Classified 45.33 % of test images correctly.
Precision on test set: [0.11 0.36 0.22 0.05 0.43 0.81 0.14 0.09]
Recall on test set: [0.47 0.18 0.09 0.42 0.43 0.62 0.15 0.66]
F1-score on test set: [0.17 0.24 0.13 0.1  0.43 0.7  0.14 0.16]
ROC AUC on test set: {'AK': 0.3, 'BCC': 0.27, 'BKL': 0.33, 'DF': 0.35, 'MEL': 0.48, 'NV': 0.72, 'SCC': 0.33, 'VASC': 0.62}
Confusion matrix on test set:
                 pred as AK  pred as BCC  ...  pred as SCC  pred as VASC
true class AK            61           17  ...           13             3
true class BCC          194           90  ...           30            32
true class BKL           87           33  ...           16            33
true class DF             3            6  ...            0             3
true class MEL           76           31  ...           17            24
true class NV           110           63  ...           13           159
true class SCC           35            7  ...           14             3
true class VASC           3            2  ...            0            25

[8 rows x 8 columns]


Epoch 9:
Mean loss 1.6742452551325788 - Correctly labeled training images 42.43%
Classified 46.41 % of test images correctly.
Precision on test set: [0.15 0.35 0.17 0.06 0.42 0.85 0.11 0.19]
Recall on test set: [0.33 0.44 0.2  0.42 0.45 0.55 0.1  0.58]
F1-score on test set: [0.21 0.39 0.19 0.11 0.44 0.67 0.1  0.29]
ROC AUC on test set: {'AK': 0.34, 'BCC': 0.3, 'BKL': 0.35, 'DF': 0.41, 'MEL': 0.49, 'NV': 0.69, 'SCC': 0.3, 'VASC': 0.65}
Confusion matrix on test set:
                 pred as AK  pred as BCC  ...  pred as SCC  pred as VASC
true class AK            43           49  ...           10             0
true class BCC           95          220  ...           25            13
true class BKL           30          117  ...           12            11
true class DF             1            7  ...            3             0
true class MEL           42           60  ...           15            13
true class NV            50          148  ...           10            54
true class SCC           21           29  ...            9             1
true class VASC           0            6  ...            0            22

[8 rows x 8 columns]


Epoch 10:
Mean loss 1.6443222021266866 - Correctly labeled training images 44.08%
Classified 48.01 % of test images correctly.
Precision on test set: [0.13 0.34 0.22 0.08 0.48 0.82 0.09 0.15]
Recall on test set: [0.24 0.21 0.26 0.25 0.34 0.66 0.41 0.68]
F1-score on test set: [0.17 0.26 0.24 0.12 0.4  0.73 0.14 0.25]
ROC AUC on test set: {'AK': 0.35, 'BCC': 0.3, 'BKL': 0.33, 'DF': 0.34, 'MEL': 0.44, 'NV': 0.72, 'SCC': 0.4, 'VASC': 0.62}
Confusion matrix on test set:
                 pred as AK  pred as BCC  ...  pred as SCC  pred as VASC
true class AK            31           23  ...           40             2
true class BCC           94          106  ...          134            21
true class BKL           23           49  ...           78            20
true class DF             1            8  ...            7             3
true class MEL           30           38  ...           76            19
true class NV            36           75  ...           78            77
true class SCC           15           12  ...           39             0
true class VASC           1            4  ...            1            26

[8 rows x 8 columns]


Epoch 11:
Mean loss 1.6114634060145177 - Correctly labeled training images 44.32%
Classified 42.67 % of test images correctly.
Precision on test set: [0.16 0.38 0.2  0.11 0.43 0.85 0.1  0.1 ]
Recall on test set: [0.33 0.23 0.27 0.36 0.41 0.51 0.54 0.76]
F1-score on test set: [0.22 0.28 0.23 0.17 0.42 0.64 0.17 0.17]
ROC AUC on test set: {'AK': 0.37, 'BCC': 0.33, 'BKL': 0.34, 'DF': 0.45, 'MEL': 0.47, 'NV': 0.67, 'SCC': 0.38, 'VASC': 0.75}
Confusion matrix on test set:
                 pred as AK  pred as BCC  ...  pred as SCC  pred as VASC
true class AK            43           22  ...           28             3
true class BCC          111          113  ...           97            31
true class BKL           28           42  ...           73            32
true class DF             1            6  ...           10             2
true class MEL           29           33  ...           91            29
true class NV            42           68  ...          140           172
true class SCC           14           11  ...           51             2
true class VASC           2            1  ...            1            29

[8 rows x 8 columns]


Epoch 12:
Mean loss 1.5723098682868368 - Correctly labeled training images 44.54%
Classified 47.99 % of test images correctly.
Precision on test set: [0.13 0.26 0.18 0.04 0.52 0.78 0.1  0.19]
Recall on test set: [0.58 0.02 0.05 0.36 0.31 0.74 0.37 0.68]
F1-score on test set: [0.21 0.03 0.08 0.07 0.39 0.76 0.16 0.3 ]
ROC AUC on test set: {'AK': 0.37, 'BCC': 0.31, 'BKL': 0.31, 'DF': 0.39, 'MEL': 0.43, 'NV': 0.73, 'SCC': 0.34, 'VASC': 0.61}
Confusion matrix on test set:
                 pred as AK  pred as BCC  ...  pred as SCC  pred as VASC
true class AK            75            2  ...           27             3
true class BCC          210            9  ...          109            15
true class BKL           92            5  ...           74            17
true class DF             4            1  ...           10             1
true class MEL           68            4  ...           58            18
true class NV            89           13  ...           38            56
true class SCC           30            0  ...           35             0
true class VASC           2            0  ...            1            26

[8 rows x 8 columns]


Epoch 13:
Mean loss 1.5455480408781335 - Correctly labeled training images 46.04%
Classified 50.46 % of test images correctly.
Precision on test set: [0.22 0.35 0.27 0.13 0.42 0.83 0.16 0.09]
Recall on test set: [0.18 0.62 0.09 0.25 0.51 0.6  0.11 0.79]
F1-score on test set: [0.2  0.45 0.13 0.17 0.46 0.69 0.13 0.16]
ROC AUC on test set: {'AK': 0.32, 'BCC': 0.29, 'BKL': 0.32, 'DF': 0.33, 'MEL': 0.49, 'NV': 0.71, 'SCC': 0.27, 'VASC': 0.77}
Confusion matrix on test set:
                 pred as AK  pred as BCC  ...  pred as SCC  pred as VASC
true class AK            24           76  ...            2             7
true class BCC           42          307  ...           12            38
true class BKL           15          150  ...           11            25
true class DF             1           11  ...            2             6
true class MEL           12          100  ...            6            41
true class NV             7          173  ...           18           177
true class SCC           10           50  ...           10             7
true class VASC           0            4  ...            0            30

[8 rows x 8 columns]


Epoch 14:
Mean loss 1.537644996439997 - Correctly labeled training images 46.05%
Classified 48.12 % of test images correctly.
Precision on test set: [0.14 0.4  0.21 0.09 0.46 0.84 0.11 0.14]
Recall on test set: [0.59 0.18 0.2  0.5  0.4  0.65 0.23 0.63]
F1-score on test set: [0.23 0.25 0.2  0.15 0.43 0.73 0.15 0.23]
ROC AUC on test set: {'AK': 0.35, 'BCC': 0.28, 'BKL': 0.3, 'DF': 0.38, 'MEL': 0.47, 'NV': 0.72, 'SCC': 0.36, 'VASC': 0.66}
Confusion matrix on test set:
                 pred as AK  pred as BCC  ...  pred as SCC  pred as VASC
true class AK            77           13  ...           12             1
true class BCC          199           89  ...           58            20
true class BKL           95           29  ...           41            14
true class DF             2            6  ...            5             1
true class MEL           65           22  ...           36            18
true class NV            74           52  ...           26            87
true class SCC           39            7  ...           22             3
true class VASC           1            3  ...            0            24

[8 rows x 8 columns]


Epoch 15:
Mean loss 1.495658924997041 - Correctly labeled training images 46.66%
Classified 48.91 % of test images correctly.
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:207: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  std = torch.tensor(std, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:206: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mean = torch.tensor(mean, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:207: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  std = torch.tensor(std, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:206: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mean = torch.tensor(mean, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:207: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  std = torch.tensor(std, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:206: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mean = torch.tensor(mean, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:207: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  std = torch.tensor(std, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:206: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mean = torch.tensor(mean, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:207: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  std = torch.tensor(std, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:206: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mean = torch.tensor(mean, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:207: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  std = torch.tensor(std, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:206: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mean = torch.tensor(mean, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:207: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  std = torch.tensor(std, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:206: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mean = torch.tensor(mean, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:207: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  std = torch.tensor(std, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:206: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mean = torch.tensor(mean, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:207: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  std = torch.tensor(std, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:206: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mean = torch.tensor(mean, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:207: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  std = torch.tensor(std, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:206: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mean = torch.tensor(mean, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:207: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  std = torch.tensor(std, dtype=torch.float32)
Precision on test set: [0.17 0.34 0.22 0.06 0.45 0.85 0.14 0.24]
Recall on test set: [0.46 0.3  0.24 0.42 0.44 0.62 0.3  0.53]
F1-score on test set: [0.25 0.32 0.23 0.11 0.45 0.72 0.19 0.33]
ROC AUC on test set: {'AK': 0.36, 'BCC': 0.29, 'BKL': 0.33, 'DF': 0.45, 'MEL': 0.48, 'NV': 0.71, 'SCC': 0.32, 'VASC': 0.6}
Confusion matrix on test set:
                 pred as AK  pred as BCC  ...  pred as SCC  pred as VASC
true class AK            60           22  ...           17             1
true class BCC          134          148  ...           65             7
true class BKL           49           72  ...           35             6
true class DF             1            8  ...            6             0
true class MEL           38           57  ...           25             6
true class NV            42          110  ...           26            45
true class SCC           25           16  ...           28             0
true class VASC           1            5  ...            0            20

[8 rows x 8 columns]


Epoch 16:
Mean loss 1.4809426166093689 - Correctly labeled training images 47.56%
Classified 50.14 % of test images correctly.
Precision on test set: [0.17 0.37 0.28 0.06 0.52 0.82 0.13 0.11]
Recall on test set: [0.38 0.33 0.16 0.5  0.35 0.68 0.34 0.66]
F1-score on test set: [0.23 0.35 0.21 0.11 0.42 0.74 0.19 0.19]
ROC AUC on test set: {'AK': 0.33, 'BCC': 0.31, 'BKL': 0.32, 'DF': 0.51, 'MEL': 0.45, 'NV': 0.72, 'SCC': 0.34, 'VASC': 0.69}
Confusion matrix on test set:
                 pred as AK  pred as BCC  ...  pred as SCC  pred as VASC
true class AK            49           31  ...           21             6
true class BCC          104          164  ...           59            34
true class BKL           36           76  ...           42            19
true class DF             1            6  ...            3             4
true class MEL           41           56  ...           57            22
true class NV            44           89  ...           36           115
true class SCC           19           18  ...           32             5
true class VASC           1            4  ...            0            25

[8 rows x 8 columns]


Epoch 17:
Mean loss 1.440419207047965 - Correctly labeled training images 48.06%
Classified 45.12 % of test images correctly.
Precision on test set: [0.13 0.36 0.22 0.05 0.51 0.82 0.14 0.12]
Recall on test set: [0.61 0.11 0.22 0.5  0.33 0.62 0.3  0.55]
F1-score on test set: [0.21 0.16 0.22 0.1  0.4  0.71 0.19 0.19]
ROC AUC on test set: {'AK': 0.42, 'BCC': 0.3, 'BKL': 0.32, 'DF': 0.47, 'MEL': 0.45, 'NV': 0.71, 'SCC': 0.36, 'VASC': 0.61}
Confusion matrix on test set:
                 pred as AK  pred as BCC  ...  pred as SCC  pred as VASC
true class AK            79            2  ...           18             5
true class BCC          227           53  ...           55            35
true class BKL           98           23  ...           36            16
true class DF             3            4  ...            4             1
true class MEL           81           13  ...           34            28
true class NV            99           44  ...           29            69
true class SCC           37            4  ...           28             6
true class VASC           0            5  ...            1            21

[8 rows x 8 columns]


Epoch 18:
Mean loss 1.4048425149090282 - Correctly labeled training images 48.35%
Classified 50.30 % of test images correctly.
Precision on test set: [0.16 0.4  0.25 0.08 0.45 0.86 0.13 0.16]
Recall on test set: [0.59 0.24 0.25 0.31 0.49 0.63 0.24 0.66]
F1-score on test set: [0.25 0.3  0.25 0.13 0.47 0.73 0.17 0.26]
ROC AUC on test set: {'AK': 0.39, 'BCC': 0.31, 'BKL': 0.33, 'DF': 0.43, 'MEL': 0.48, 'NV': 0.68, 'SCC': 0.38, 'VASC': 0.71}
Confusion matrix on test set:
                 pred as AK  pred as BCC  ...  pred as SCC  pred as VASC
true class AK            77           10  ...           11             3
true class BCC          178          121  ...           47            21
true class BKL           61           43  ...           31            15
true class DF             1            7  ...            7             3
true class MEL           56           31  ...           21            20
true class NV            66           77  ...           32            68
true class SCC           36           12  ...           23             1
true class VASC           2            4  ...            0            25

[8 rows x 8 columns]


Epoch 19:
Mean loss 1.4399000345156396 - Correctly labeled training images 47.81%
Classified 48.67 % of test images correctly.
Precision on test set: [0.18 0.41 0.24 0.07 0.47 0.84 0.13 0.18]
Recall on test set: [0.57 0.21 0.32 0.36 0.4  0.62 0.36 0.74]
F1-score on test set: [0.27 0.28 0.28 0.11 0.43 0.71 0.19 0.29]
ROC AUC on test set: {'AK': 0.37, 'BCC': 0.29, 'BKL': 0.32, 'DF': 0.42, 'MEL': 0.49, 'NV': 0.69, 'SCC': 0.35, 'VASC': 0.69}
Confusion matrix on test set:
                 pred as AK  pred as BCC  ...  pred as SCC  pred as VASC
true class AK            74           16  ...           14             1
true class BCC          149          104  ...           68            25
true class BKL           61           38  ...           34             7
true class DF             2            2  ...           11             3
true class MEL           50           27  ...           47            15
true class NV            50           47  ...           58            78
true class SCC           23           15  ...           34             0
true class VASC           2            2  ...            0            28

[8 rows x 8 columns]


Epoch 20:
Mean loss 1.3741582694113819 - Correctly labeled training images 49.71%
Classified 50.86 % of test images correctly.
Precision on test set: [0.19 0.39 0.31 0.06 0.46 0.85 0.18 0.18]
Recall on test set: [0.34 0.39 0.13 0.64 0.5  0.63 0.3  0.71]
F1-score on test set: [0.25 0.39 0.19 0.1  0.48 0.72 0.23 0.29]
ROC AUC on test set: {'AK': 0.31, 'BCC': 0.31, 'BKL': 0.34, 'DF': 0.55, 'MEL': 0.47, 'NV': 0.7, 'SCC': 0.31, 'VASC': 0.72}
Confusion matrix on test set:
                 pred as AK  pred as BCC  ...  pred as SCC  pred as VASC
true class AK            44           38  ...           13             6
true class BCC           75          196  ...           39            20
true class BKL           32           82  ...           24            10
true class DF             0            4  ...            3             2
true class MEL           28           61  ...           28            16
true class NV            30          101  ...           19            62
true class SCC           16           24  ...           28             3
true class VASC           1            2  ...            0            27

[8 rows x 8 columns]

Training finished. Time >230.0 minutes.
Model succesfully saved to /scratch/work/hakkina7/melanoma/inceptionV3.pth
