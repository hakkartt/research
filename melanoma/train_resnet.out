File path is /scratch/work/hakkina7/melanoma/
Device is cuda
Training ResNet50 model.
Since there is class imbalance present in some of the data sets, use the following weights in the loss function:
tensor([ 29.1988,   7.6238,   9.6541, 106.0942,   5.6009,   1.9674,  40.3665,
        100.3168], device='cuda:0')


Epoch 1:
Mean loss 2.1643780422887593 - Correctly labeled training images 24.68%
Classified 32.17 % of test images correctly.
Precision on test set: [0.11 0.21 0.15 0.02 0.34 0.87 0.07 0.  ]
Recall on test set: [0.35 0.18 0.03 0.61 0.55 0.35 0.04 0.  ]
F1-score on test set: [0.17 0.19 0.05 0.04 0.42 0.5  0.05 0.  ]
ROC AUC on test set: {'AK': 0.35, 'BCC': 0.33, 'BKL': 0.37, 'DF': 0.42, 'MEL': 0.55, 'NV': 0.64, 'SCC': 0.38, 'VASC': 0.41}
Confusion matrix on test set:
                 pred as AK  pred as BCC  ...  pred as SCC  pred as VASC
true class AK            45           24  ...            3             0
true class BCC          148           88  ...           13             0
true class BKL           50           83  ...            9             0
true class DF             4            6  ...            0             0
true class MEL           45           68  ...            9             0
true class NV            87          132  ...           19             0
true class SCC           23           14  ...            4             0
true class VASC           1            3  ...            2             0

[8 rows x 8 columns]


Epoch 2:
Mean loss 1.9461041077830439 - Correctly labeled training images 33.39%
Classified 38.19 % of test images correctly.
Precision on test set: [0.09 0.21 0.12 0.06 0.45 0.82 0.16 0.07]
Recall on test set: [0.55 0.22 0.09 0.28 0.37 0.49 0.1  0.34]
F1-score on test set: [0.15 0.21 0.11 0.1  0.41 0.62 0.12 0.11]
ROC AUC on test set: {'AK': 0.44, 'BCC': 0.41, 'BKL': 0.38, 'DF': 0.34, 'MEL': 0.49, 'NV': 0.62, 'SCC': 0.39, 'VASC': 0.41}
Confusion matrix on test set:
                 pred as AK  pred as BCC  ...  pred as SCC  pred as VASC
true class AK            72           30  ...            5             2
true class BCC          253          110  ...           10            21
true class BKL          108          102  ...           11            18
true class DF             5            8  ...            4             5
true class MEL          131           68  ...            4            17
true class NV           203          199  ...           15           116
true class SCC           41           13  ...            9             4
true class VASC           7            3  ...            0            13

[8 rows x 8 columns]


Epoch 3:
Mean loss 1.8615223447607143 - Correctly labeled training images 37.30%
Classified 32.98 % of test images correctly.
Precision on test set: [0.11 0.31 0.13 0.05 0.37 0.86 0.   0.08]
Recall on test set: [0.45 0.24 0.38 0.19 0.33 0.35 0.   0.5 ]
F1-score on test set: [0.17 0.27 0.2  0.07 0.35 0.5  0.   0.14]
ROC AUC on test set: {'AK': 0.38, 'BCC': 0.35, 'BKL': 0.37, 'DF': 0.27, 'MEL': 0.56, 'NV': 0.62, 'SCC': 0.36, 'VASC': 0.51}
Confusion matrix on test set:
                 pred as AK  pred as BCC  ...  pred as SCC  pred as VASC
true class AK            58           31  ...            0             4
true class BCC          194          120  ...            0            25
true class BKL           62           65  ...            0            21
true class DF             8            6  ...            0             5
true class MEL           76           38  ...            0            35
true class NV           100          105  ...            0           111
true class SCC           38           15  ...            0             5
true class VASC           5            2  ...            0            19

[8 rows x 8 columns]


Epoch 4:
Mean loss 1.7710788556453934 - Correctly labeled training images 41.15%
Classified 49.75 % of test images correctly.
Precision on test set: [0.07 0.31 0.13 0.17 0.43 0.8  0.12 0.08]
Recall on test set: [0.01 0.54 0.04 0.03 0.45 0.65 0.33 0.55]
F1-score on test set: [0.01 0.39 0.06 0.05 0.44 0.71 0.17 0.14]
ROC AUC on test set: {'AK': 0.3, 'BCC': 0.28, 'BKL': 0.34, 'DF': 0.3, 'MEL': 0.5, 'NV': 0.71, 'SCC': 0.33, 'VASC': 0.55}
Confusion matrix on test set:
                 pred as AK  pred as BCC  ...  pred as SCC  pred as VASC
true class AK             1           79  ...           22             7
true class BCC            3          269  ...           88            44
true class BKL            3          157  ...           41            19
true class DF             0           12  ...            9             7
true class MEL            2          101  ...           35            17
true class NV             6          213  ...           41           130
true class SCC            0           31  ...           31             9
true class VASC           0            6  ...            0            21

[8 rows x 8 columns]


Epoch 5:
Mean loss 1.7089226370918262 - Correctly labeled training images 43.42%
Classified 47.07 % of test images correctly.
Precision on test set: [0.12 0.34 0.24 0.   0.5  0.77 0.07 0.1 ]
Recall on test set: [0.48 0.2  0.14 0.   0.23 0.7  0.31 0.71]
F1-score on test set: [0.19 0.25 0.18 0.   0.31 0.73 0.12 0.18]
ROC AUC on test set: {'AK': 0.33, 'BCC': 0.31, 'BKL': 0.31, 'DF': 0.3, 'MEL': 0.48, 'NV': 0.71, 'SCC': 0.32, 'VASC': 0.64}
Confusion matrix on test set:
                 pred as AK  pred as BCC  ...  pred as SCC  pred as VASC
true class AK            62           17  ...           21             7
true class BCC          218          101  ...           94            27
true class BKL           73           54  ...           72            34
true class DF             5            9  ...           14             3
true class MEL           59           22  ...           60            53
true class NV            80           83  ...          101           107
true class SCC           37            9  ...           29             1
true class VASC           5            0  ...            1            27

[8 rows x 8 columns]


Epoch 6:
Mean loss 1.6563674956090066 - Correctly labeled training images 43.98%
Classified 49.25 % of test images correctly.
Precision on test set: [0.12 0.34 0.19 0.11 0.45 0.82 0.15 0.1 ]
Recall on test set: [0.18 0.55 0.13 0.33 0.43 0.61 0.14 0.68]
F1-score on test set: [0.15 0.42 0.15 0.16 0.44 0.7  0.14 0.18]
ROC AUC on test set: {'AK': 0.32, 'BCC': 0.3, 'BKL': 0.32, 'DF': 0.33, 'MEL': 0.46, 'NV': 0.72, 'SCC': 0.28, 'VASC': 0.7}
Confusion matrix on test set:
                 pred as AK  pred as BCC  ...  pred as SCC  pred as VASC
true class AK            23           66  ...            8             5
true class BCC           70          276  ...           23            34
true class BKL           22          145  ...           13            18
true class DF             0           14  ...            0             3
true class MEL           23           91  ...           21            32
true class NV            33          183  ...           11           124
true class SCC           15           36  ...           13             6
true class VASC           0            8  ...            0            26

[8 rows x 8 columns]


Epoch 7:
Mean loss 1.6436479996995594 - Correctly labeled training images 45.31%
Classified 48.04 % of test images correctly.
Precision on test set: [0.33 0.36 0.26 0.07 0.37 0.89 0.11 0.26]
Recall on test set: [0.01 0.48 0.2  0.22 0.63 0.53 0.4  0.63]
F1-score on test set: [0.02 0.41 0.22 0.11 0.47 0.66 0.17 0.37]
ROC AUC on test set: {'AK': 0.3, 'BCC': 0.27, 'BKL': 0.33, 'DF': 0.33, 'MEL': 0.55, 'NV': 0.68, 'SCC': 0.28, 'VASC': 0.64}
Confusion matrix on test set:
                 pred as AK  pred as BCC  ...  pred as SCC  pred as VASC
true class AK             1           62  ...           33             0
true class BCC            1          238  ...          121            13
true class BKL            0          115  ...           45            11
true class DF             0           12  ...            6             1
true class MEL            0           66  ...           51             7
true class NV             1          138  ...           50            37
true class SCC            0           24  ...           38             0
true class VASC           0            6  ...            2            24

/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:206: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mean = torch.tensor(mean, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:207: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  std = torch.tensor(std, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1248: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:206: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mean = torch.tensor(mean, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:207: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  std = torch.tensor(std, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:206: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mean = torch.tensor(mean, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:207: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  std = torch.tensor(std, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1248: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:206: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mean = torch.tensor(mean, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:207: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  std = torch.tensor(std, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:206: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mean = torch.tensor(mean, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:207: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  std = torch.tensor(std, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1248: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:206: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mean = torch.tensor(mean, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:207: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  std = torch.tensor(std, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:206: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mean = torch.tensor(mean, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:207: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  std = torch.tensor(std, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:206: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mean = torch.tensor(mean, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:207: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  std = torch.tensor(std, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:206: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mean = torch.tensor(mean, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:207: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  std = torch.tensor(std, dtype=torch.float32)
[8 rows x 8 columns]


Epoch 8:
Mean loss 1.5624145708437598 - Correctly labeled training images 46.79%
Classified 41.64 % of test images correctly.
Precision on test set: [0.16 0.38 0.15 0.05 0.46 0.88 0.09 0.18]
Recall on test set: [0.34 0.28 0.34 0.06 0.41 0.48 0.41 0.68]
F1-score on test set: [0.21 0.32 0.21 0.05 0.44 0.62 0.14 0.29]
ROC AUC on test set: {'AK': 0.31, 'BCC': 0.28, 'BKL': 0.37, 'DF': 0.35, 'MEL': 0.51, 'NV': 0.69, 'SCC': 0.3, 'VASC': 0.68}
Confusion matrix on test set:
                 pred as AK  pred as BCC  ...  pred as SCC  pred as VASC
true class AK            44           18  ...           37             2
true class BCC          106          137  ...          150            23
true class BKL           44           56  ...           63             9
true class DF             1            6  ...           16             2
true class MEL           27           39  ...           53            17
true class NV            35           96  ...           86            62
true class SCC           22           10  ...           39             2
true class VASC           2            3  ...            1            26

[8 rows x 8 columns]


Epoch 9:
Mean loss 1.6153311444569838 - Correctly labeled training images 45.82%
Classified 42.33 % of test images correctly.
Precision on test set: [0.14 0.41 0.25 0.   0.37 0.87 0.08 0.11]
Recall on test set: [0.3  0.31 0.26 0.   0.43 0.49 0.51 0.76]
F1-score on test set: [0.19 0.35 0.26 0.   0.39 0.63 0.14 0.2 ]
ROC AUC on test set: {'AK': 0.33, 'BCC': 0.3, 'BKL': 0.35, 'DF': 0.34, 'MEL': 0.48, 'NV': 0.7, 'SCC': 0.34, 'VASC': 0.73}
Confusion matrix on test set:
                 pred as AK  pred as BCC  ...  pred as SCC  pred as VASC
true class AK            39           17  ...           45             4
true class BCC           98          155  ...          174            28
true class BKL           51           40  ...           90            25
true class DF             1            5  ...           20             3
true class MEL           31           38  ...           91            50
true class NV            42          116  ...          113           112
true class SCC           20            7  ...           48             5
true class VASC           1            3  ...            3            29

[8 rows x 8 columns]


Epoch 10:
Mean loss 1.533894652917934 - Correctly labeled training images 47.44%
Classified 47.01 % of test images correctly.
Precision on test set: [0.14 0.41 0.24 0.04 0.46 0.84 0.12 0.22]
Recall on test set: [0.28 0.34 0.29 0.47 0.37 0.6  0.19 0.63]
F1-score on test set: [0.19 0.37 0.26 0.07 0.41 0.7  0.14 0.32]
ROC AUC on test set: {'AK': 0.28, 'BCC': 0.26, 'BKL': 0.37, 'DF': 0.39, 'MEL': 0.47, 'NV': 0.73, 'SCC': 0.27, 'VASC': 0.64}
Confusion matrix on test set:
                 pred as AK  pred as BCC  ...  pred as SCC  pred as VASC
true class AK            36           23  ...           10             1
true class BCC           97          168  ...           47            20
true class BKL           35           52  ...           24             9
true class DF             1            7  ...            3             2
true class MEL           38           46  ...           34            10
true class NV            31           92  ...           19            43
true class SCC           19           17  ...           18             2
true class VASC           2            4  ...            0            24

[8 rows x 8 columns]


Epoch 11:
Mean loss 1.5395666458629282 - Correctly labeled training images 47.59%
Classified 48.83 % of test images correctly.
Precision on test set: [0.14 0.38 0.25 0.04 0.55 0.82 0.1  0.18]
Recall on test set: [0.41 0.39 0.32 0.11 0.25 0.64 0.35 0.71]
F1-score on test set: [0.21 0.39 0.28 0.06 0.35 0.72 0.16 0.28]
ROC AUC on test set: {'AK': 0.32, 'BCC': 0.3, 'BKL': 0.35, 'DF': 0.34, 'MEL': 0.45, 'NV': 0.72, 'SCC': 0.32, 'VASC': 0.7}
Confusion matrix on test set:
                 pred as AK  pred as BCC  ...  pred as SCC  pred as VASC
true class AK            53           22  ...           26             0
true class BCC          138          195  ...           78            15
true class BKL           53           66  ...           44            12
true class DF             3           11  ...           11             0
true class MEL           38           64  ...           66            36
true class NV            65          128  ...           64            60
true class SCC           27           17  ...           33             3
true class VASC           4            5  ...            1            27

[8 rows x 8 columns]


Epoch 12:
Mean loss 1.5380561309469987 - Correctly labeled training images 48.21%
Classified 47.38 % of test images correctly.
Precision on test set: [0.16 0.43 0.36 0.07 0.48 0.73 0.09 0.06]
Recall on test set: [0.3  0.22 0.15 0.08 0.27 0.69 0.38 0.76]
F1-score on test set: [0.21 0.29 0.21 0.07 0.35 0.71 0.14 0.11]
ROC AUC on test set: {'AK': 0.27, 'BCC': 0.24, 'BKL': 0.32, 'DF': 0.32, 'MEL': 0.48, 'NV': 0.75, 'SCC': 0.29, 'VASC': 0.67}
Confusion matrix on test set:
                 pred as AK  pred as BCC  ...  pred as SCC  pred as VASC
true class AK            39           12  ...           37             7
true class BCC           89          110  ...          136            53
true class BKL           29           43  ...           67            41
true class DF             1            4  ...           15             1
true class MEL           30           28  ...           55            70
true class NV            32           47  ...           68           266
true class SCC           16            8  ...           36             8
true class VASC           3            2  ...            3            29

[8 rows x 8 columns]


Epoch 13:
Mean loss 1.6982458469807538 - Correctly labeled training images 45.02%
Classified 48.35 % of test images correctly.
Precision on test set: [0.   0.34 0.21 0.07 0.4  0.74 0.06 0.34]
Recall on test set: [0.   0.34 0.02 0.25 0.36 0.7  0.43 0.29]
F1-score on test set: [0.   0.34 0.04 0.11 0.38 0.72 0.1  0.31]
ROC AUC on test set: {'AK': 0.29, 'BCC': 0.29, 'BKL': 0.32, 'DF': 0.25, 'MEL': 0.51, 'NV': 0.71, 'SCC': 0.34, 'VASC': 0.56}
Confusion matrix on test set:
                 pred as AK  pred as BCC  ...  pred as SCC  pred as VASC
true class AK             0           47  ...           47             0
true class BCC            0          170  ...          161             8
true class BKL            0           82  ...          103             2
true class DF             0            5  ...           14             0
true class MEL            0           52  ...          119             1
true class NV             0          118  ...          191             9
true class SCC            0           21  ...           40             1
true class VASC           0            5  ...            2            11

[8 rows x 8 columns]


Epoch 14:
Mean loss 1.7102768046998826 - Correctly labeled training images 43.24%
Classified 49.12 % of test images correctly.
Precision on test set: [0.13 0.41 0.25 0.09 0.52 0.76 0.1  0.13]
Recall on test set: [0.22 0.44 0.35 0.14 0.15 0.68 0.34 0.68]
F1-score on test set: [0.16 0.42 0.29 0.11 0.23 0.72 0.16 0.21]
ROC AUC on test set: {'AK': 0.32, 'BCC': 0.29, 'BKL': 0.33, 'DF': 0.3, 'MEL': 0.45, 'NV': 0.73, 'SCC': 0.34, 'VASC': 0.61}
Confusion matrix on test set:
                 pred as AK  pred as BCC  ...  pred as SCC  pred as VASC
true class AK            28           29  ...           26             4
true class BCC           61          217  ...           83            24
true class BKL           24           63  ...           54            14
true class DF             1           18  ...            4             1
true class MEL           39           49  ...           63            33
true class NV            41          130  ...           55            99
true class SCC           19           19  ...           32             3
true class VASC           1            5  ...            0            26

[8 rows x 8 columns]


Epoch 15:
Mean loss 1.5332181770530784 - Correctly labeled training images 47.01%
Classified 50.67 % of test images correctly.
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:206: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mean = torch.tensor(mean, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:207: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  std = torch.tensor(std, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:206: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mean = torch.tensor(mean, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:207: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  std = torch.tensor(std, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:206: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mean = torch.tensor(mean, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:207: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  std = torch.tensor(std, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:206: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mean = torch.tensor(mean, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:207: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  std = torch.tensor(std, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1248: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:206: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mean = torch.tensor(mean, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:207: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  std = torch.tensor(std, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:206: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mean = torch.tensor(mean, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:207: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  std = torch.tensor(std, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:206: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mean = torch.tensor(mean, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:207: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  std = torch.tensor(std, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:206: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mean = torch.tensor(mean, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:207: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  std = torch.tensor(std, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:206: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mean = torch.tensor(mean, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:207: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  std = torch.tensor(std, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:206: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mean = torch.tensor(mean, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:207: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  std = torch.tensor(std, dtype=torch.float32)
Precision on test set: [0.14 0.41 0.25 0.08 0.47 0.85 0.12 0.18]
Recall on test set: [0.39 0.44 0.32 0.06 0.39 0.63 0.3  0.71]
F1-score on test set: [0.2  0.42 0.28 0.07 0.43 0.72 0.18 0.29]
ROC AUC on test set: {'AK': 0.31, 'BCC': 0.28, 'BKL': 0.37, 'DF': 0.28, 'MEL': 0.46, 'NV': 0.72, 'SCC': 0.3, 'VASC': 0.67}
Confusion matrix on test set:
                 pred as AK  pred as BCC  ...  pred as SCC  pred as VASC
true class AK            51           28  ...           16             2
true class BCC          120          218  ...           69            21
true class BKL           65           62  ...           24             9
true class DF             0           19  ...            6             0
true class MEL           51           59  ...           44            22
true class NV            59          121  ...           38            65
true class SCC           21           27  ...           28             3
true class VASC           3            3  ...            1            27

[8 rows x 8 columns]


Epoch 16:
Mean loss 1.4443574486188708 - Correctly labeled training images 49.40%
Classified 51.17 % of test images correctly.
Precision on test set: [0.15 0.44 0.31 0.12 0.47 0.81 0.11 0.16]
Recall on test set: [0.26 0.35 0.25 0.14 0.34 0.68 0.6  0.82]
F1-score on test set: [0.19 0.39 0.28 0.13 0.4  0.74 0.18 0.27]
ROC AUC on test set: {'AK': 0.29, 'BCC': 0.29, 'BKL': 0.34, 'DF': 0.34, 'MEL': 0.45, 'NV': 0.73, 'SCC': 0.34, 'VASC': 0.77}
Confusion matrix on test set:
                 pred as AK  pred as BCC  ...  pred as SCC  pred as VASC
true class AK            34           20  ...           51             3
true class BCC           57          176  ...          169            34
true class BKL           52           44  ...           70            13
true class DF             0            8  ...           16             1
true class MEL           30           35  ...           76            21
true class NV            48           94  ...           78            81
true class SCC            6           16  ...           56             5
true class VASC           2            3  ...            1            31

[8 rows x 8 columns]


Epoch 17:
Mean loss 1.399372709944421 - Correctly labeled training images 50.21%
Classified 47.12 % of test images correctly.
Precision on test set: [0.15 0.49 0.28 0.04 0.45 0.84 0.1  0.28]
Recall on test set: [0.49 0.26 0.36 0.42 0.41 0.58 0.22 0.71]
F1-score on test set: [0.23 0.34 0.31 0.07 0.43 0.69 0.14 0.4 ]
ROC AUC on test set: {'AK': 0.36, 'BCC': 0.29, 'BKL': 0.4, 'DF': 0.28, 'MEL': 0.49, 'NV': 0.67, 'SCC': 0.37, 'VASC': 0.73}
Confusion matrix on test set:
                 pred as AK  pred as BCC  ...  pred as SCC  pred as VASC
true class AK            64            5  ...           16             0
true class BCC          130          128  ...           83            13
true class BKL           63           28  ...           16             5
true class DF             6            3  ...            7             0
true class MEL           48           27  ...           30             9
true class NV            72           56  ...           29            42
true class SCC           32           10  ...           21             2
true class VASC           1            3  ...            0            27

[8 rows x 8 columns]


Epoch 18:
Mean loss 1.3966042015830802 - Correctly labeled training images 50.74%
Classified 50.80 % of test images correctly.
Precision on test set: [0.16 0.45 0.32 0.08 0.43 0.87 0.18 0.36]
Recall on test set: [0.6  0.35 0.32 0.47 0.54 0.58 0.2  0.71]
F1-score on test set: [0.26 0.39 0.32 0.13 0.48 0.7  0.19 0.47]
ROC AUC on test set: {'AK': 0.37, 'BCC': 0.28, 'BKL': 0.39, 'DF': 0.34, 'MEL': 0.48, 'NV': 0.69, 'SCC': 0.28, 'VASC': 0.65}
Confusion matrix on test set:
                 pred as AK  pred as BCC  ...  pred as SCC  pred as VASC
true class AK            78           12  ...            8             1
true class BCC          146          173  ...           45             7
true class BKL           86           28  ...            5             5
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:206: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  mean = torch.tensor(mean, dtype=torch.float32)
/share/apps/anaconda-ci/fgci-centos7-anaconda/software/anaconda/2021-03-tf2/e54ecce8/lib/python3.8/site-packages/torchvision/transforms/functional.py:207: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  std = torch.tensor(std, dtype=torch.float32)
true class DF             5            6  ...            1             0
true class MEL           55           43  ...           17             3
true class NV            76          106  ...           13            28
true class SCC           29           13  ...           19             5
true class VASC           4            4  ...            0            27

[8 rows x 8 columns]


Epoch 19:
Mean loss 1.3480327974076527 - Correctly labeled training images 51.00%
Classified 51.72 % of test images correctly.
Precision on test set: [0.18 0.51 0.31 0.05 0.51 0.81 0.19 0.12]
Recall on test set: [0.48 0.45 0.27 0.5  0.32 0.67 0.13 0.82]
F1-score on test set: [0.26 0.48 0.29 0.1  0.39 0.74 0.15 0.21]
ROC AUC on test set: {'AK': 0.27, 'BCC': 0.3, 'BKL': 0.34, 'DF': 0.42, 'MEL': 0.42, 'NV': 0.74, 'SCC': 0.29, 'VASC': 0.8}
Confusion matrix on test set:
                 pred as AK  pred as BCC  ...  pred as SCC  pred as VASC
true class AK            62           18  ...            8             6
true class BCC           89          224  ...           16            49
true class BKL           60           46  ...            8            19
true class DF             1            7  ...            1             2
true class MEL           55           45  ...           15            37
true class NV            50           80  ...            4           102
true class SCC           29           18  ...           12             8
true class VASC           2            3  ...            0            31

[8 rows x 8 columns]


Epoch 20:
Mean loss 1.2787077092691927 - Correctly labeled training images 52.42%
Classified 41.01 % of test images correctly.
Precision on test set: [0.17 0.54 0.19 0.12 0.37 0.9  0.13 0.47]
Recall on test set: [0.39 0.48 0.44 0.22 0.59 0.33 0.29 0.55]
F1-score on test set: [0.23 0.5  0.26 0.16 0.45 0.48 0.18 0.51]
ROC AUC on test set: {'AK': 0.36, 'BCC': 0.32, 'BKL': 0.42, 'DF': 0.35, 'MEL': 0.54, 'NV': 0.63, 'SCC': 0.33, 'VASC': 0.59}
Confusion matrix on test set:
                 pred as AK  pred as BCC  ...  pred as SCC  pred as VASC
true class AK            51           24  ...           16             0
true class BCC           93          237  ...           55             4
true class BKL           52           42  ...           21             1
true class DF             5           13  ...            3             0
true class MEL           31           27  ...           50             1
true class NV            48           72  ...           37            17
true class SCC           23           22  ...           27             1
true class VASC           4            5  ...            0            21

[8 rows x 8 columns]

Training finished. Time >166.0 minutes.
Model succesfully saved to /scratch/work/hakkina7/melanoma/resnet50.pth
